// <auto-generated />
using ManagementService.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ManagementService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240123162229_AllModelsMigration")]
    partial class AllModelsMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ManagementService.Models.Branch", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("Branch", (string)null);
                });

            modelBuilder.Entity("ManagementService.Models.Company", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int[]>("PaymentShares")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("ManagementService.Models.Employee", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BranchName1")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Name");

                    b.HasIndex("BranchName");

                    b.HasIndex("BranchName1");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("ManagementService.Models.Manager", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("Manager", (string)null);
                });

            modelBuilder.Entity("ManagementService.Models.Medicine", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("BarCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MedicineType")
                        .HasColumnType("integer");

                    b.HasKey("Name");

                    b.ToTable("Medicine", (string)null);
                });

            modelBuilder.Entity("ManagementService.Models.Employee", b =>
                {
                    b.HasOne("ManagementService.Models.Branch", null)
                        .WithMany()
                        .HasForeignKey("BranchName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementService.Models.Branch", null)
                        .WithMany("Employees")
                        .HasForeignKey("BranchName1");
                });

            modelBuilder.Entity("ManagementService.Models.Branch", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
